{"automatic_utility_network_ip_filter":{"default":true,"type":"boolean","title":"Automatic utility network IP Filter","description":"Automatically allow connections from servers in the utility network within the same zone"},"ip_filter":{"default":[],"type":"array","title":"IP filter","description":"Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'"},"migration":{"type":["object","null"],"title":"Migrate data from existing server","properties":{"dbname":{"maxLength":63,"type":"string","title":"Database name for bootstrapping the initial connection"},"host":{"maxLength":255,"type":"string","title":"Hostname or IP address of the server where to migrate data from"},"ignore_dbs":{"maxLength":2048,"type":"string","title":"Comma-separated list of databases, which should be ignored during migration (supported by MySQL and PostgreSQL only at the moment)"},"method":{"type":"string","title":"The migration method to be used (currently supported only by Redis, Dragonfly, MySQL and PostgreSQL service types)","enum":["dump","replication"]},"password":{"maxLength":256,"type":"string","title":"Password for authentication with the server where to migrate data from"},"port":{"maximum":65535,"minimum":1,"type":"integer","title":"Port number of the server where to migrate data from"},"ssl":{"type":"boolean","title":"The server where to migrate data from is secured with SSL"},"username":{"maxLength":256,"type":"string","title":"User name for authentication with the server where to migrate data from"}}},"public_access":{"default":false,"type":"boolean","title":"Public Access","description":"Allow access to the service from the public Internet"},"redis_acl_channels_default":{"type":"string","title":"Default ACL for pub/sub channels used when Redis user is created","description":"Determines default pub/sub channels' ACL for new users if ACL is not supplied. When this option is not defined, all_channels is assumed to keep backward compatibility. This option doesn't affect Redis configuration acl-pubsub-default.","enum":["allchannels","resetchannels"]},"redis_io_threads":{"example":1,"maximum":32,"minimum":1,"type":"integer","title":"Redis IO thread count","description":"Set Redis IO thread count. Changing this will cause a restart of the Redis service."},"redis_lfu_decay_time":{"default":1,"maximum":120,"minimum":1,"type":"integer","title":"LFU maxmemory-policy counter decay time in minutes"},"redis_lfu_log_factor":{"default":10,"maximum":100,"minimum":0,"type":"integer","title":"Counter logarithm factor for volatile-lfu and allkeys-lfu maxmemory-policies"},"redis_maxmemory_policy":{"default":"noeviction","type":["string","null"],"title":"Redis maxmemory-policy","enum":["noeviction","allkeys-lru","volatile-lru","allkeys-random","volatile-random","volatile-ttl","volatile-lfu","allkeys-lfu"]},"redis_notify_keyspace_events":{"default":"","maxLength":32,"pattern":"^[KEg\\$lshzxentdmA]*$","type":"string","title":"Set notify-keyspace-events option"},"redis_number_of_databases":{"example":16,"maximum":128,"minimum":1,"type":"integer","title":"Number of Redis databases","description":"Set number of Redis databases. Changing this will cause a restart of the Redis service."},"redis_persistence":{"type":"string","title":"Redis persistence","description":"When persistence is 'rdb', Redis does RDB dumps each 10 minutes if any key is changed. Also RDB dumps are done according to backup schedule for backup purposes. When persistence is 'off', no RDB dumps and backups are done, so data can be lost at any moment if service is restarted for any reason, or if service is powered off. Also service can't be forked.","enum":["off","rdb"]},"redis_pubsub_client_output_buffer_limit":{"example":64,"maximum":512,"minimum":32,"type":"integer","title":"Pub/sub client output buffer hard limit in MB","description":"Set output buffer limit for pub / sub clients in MB. The value is the hard limit, the soft limit is 1/4 of the hard limit. When setting the limit, be mindful of the available memory in the selected service plan."},"redis_ssl":{"default":true,"type":"boolean","title":"Require SSL to access Redis"},"redis_timeout":{"default":300,"maximum":31536000,"minimum":0,"type":"integer","title":"Redis idle connection timeout in seconds"},"redis_version":{"type":["string","null"],"title":"Redis major version","enum":["7.0"]},"service_log":{"example":true,"type":["boolean","null"],"title":"Service logging","description":"Store logs for the service so that they are available in the HTTP API and console."}}
