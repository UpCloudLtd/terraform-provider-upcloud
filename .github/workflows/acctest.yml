name: Acceptance Tests

on:
  workflow_call:
    inputs:
      tool:
        description: 'Tool to use for the acceptance tests'
        required: true
        default: tofu
        type: string

concurrency:
  # Can not use ${{ github.workflow }} here, as that value is inherited from the calling workflow.
  group: ${{ github.repository }}-acctest
  cancel-in-progress: false

permissions:
  contents: read

jobs:
  Test:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout source code
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
      - name: Setup Go
        uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version-file: 'go.mod'
          cache: true
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_wrapper: false
        if: inputs.tool == 'terraform'
      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@592200bd4b9bbf4772ace78f887668b1aee8f716 # v1.0.5
        with:
          tofu_wrapper: false
        if: inputs.tool == 'tofu'
      - name: Set TF_ACC_* environment for OpenTofu
        run: |
          echo "TF_ACC_TERRAFORM_PATH=$(which tofu)" >> "$GITHUB_ENV"
          echo "TF_ACC_PROVIDER_NAMESPACE=hashicorp" >> "$GITHUB_ENV"
          echo "TF_ACC_PROVIDER_HOST=registry.opentofu.org" >> "$GITHUB_ENV"
        if: inputs.tool == 'tofu'
      - name: Run unit tests
        run: make test
      - name: Run acceptance tests
        env:
          UPCLOUD_USERNAME: ${{ secrets.UPCLOUD_USERNAME }}
          UPCLOUD_PASSWORD: ${{ secrets.UPCLOUD_PASSWORD }}
        if: env.UPCLOUD_PASSWORD != ''
        run: make testacc
  Cleanup:
    runs-on: ubuntu-latest
    needs: Test
    if: ${{ always() }}
    steps:
      - name: Install upctl
        uses: UpCloudLtd/upcloud-cli-action@0b74850ba423d7d254b75518a31f19bd19aa839c # v1.0.0
        with:
          username: ${{ secrets.UPCLOUD_USERNAME }}
          password: ${{ secrets.UPCLOUD_PASSWORD }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Purge resources
        timeout-minutes: 5
        run: upctl all purge --include *tf-acc-test* --exclude *persistent*
      - name: List remaining resources
        run: upctl all list --include *tf-acc-test* --exclude *persistent*
        if: ${{ failure() }}
